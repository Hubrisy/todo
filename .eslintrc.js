const restrictedGlobals = require("eslint-restricted-globals");

const OFF = 0;
const WARNING = 1;
const ERROR = 2;

const NO_UNUSED_VARS_OPTIONS = {
  argsIgnorePattern: "^_",
  caughtErrorsIgnorePattern: "^_",
};

// Taken from Jest's default "testMatch" config
const TEST_PATTERNS = [
  "**/__tests__/**/*.[jt]s?(x)",
  "**/?(*.)+(spec|test).[tj]s?(x)",
];

module.exports = {
  extends: ["airbnb-base", "plugin:prettier/recommended"],
  rules: {
    "prettier/prettier": [
      ERROR,
      {
        bracketSpacing: true,
        singleQuote: true,
        trailingComma: "all",
        arrowParens: "avoid",
      },
    ],
  },
  overrides: [
    {
      files: TEST_PATTERNS,
      env: {
        jest: true,
        "jest/globals": true,
      },
      extends: ["plugin:jest/recommended"],
      plugins: ["jest"],
    },
    {
      files: ["**/*.ts", "**/*.tsx", "**/*.mts"],
      extends: [
        "airbnb",
        "airbnb/hooks",
        "airbnb-typescript",
        "plugin:prettier/recommended",
        "plugin:@next/next/recommended",
      ],
      plugins: ["@typescript-eslint", "simple-import-sort", "unused-imports"],
      parser: "@typescript-eslint/parser",
      parserOptions: {
        project: "./tsconfig.json",
      },
      rules: {
        "prettier/prettier": [
          ERROR,
          {
            bracketSpacing: true,
            singleQuote: true,
            trailingComma: "all",
            arrowParens: "avoid",
          },
        ],
        "no-console": ERROR,
        "react/jsx-curly-brace-presence": [ERROR, { props: "never" }],
        "sort-imports": OFF,
        "simple-import-sort/imports": [
          ERROR,
          {
            groups: [
              [
                "^(assert|buffer|child_process|cluster|console|constants|crypto|dgram|dns|domain|events|fs|http|https|module|net|os|path|punycode|querystring|readline|repl|stream|string_decoder|sys|timers|tls|tty|url|util|vm|zlib|freelist|v8|process|async_hooks|http2|perf_hooks)(/.*|$)",
              ],
              ["^react", "^@?\\w"],
              [
                "^(utils|config|vendored-lib|styles|state|routes|layouts|hooks|components|assets|apis)(/.*|$)",
              ],
              ["^\\u0000"],
              ["^\\.\\.(?!/?$)", "^\\.\\./?$"],
              ["^\\./(?=.*/)(?!/?$)", "^\\.(?!/?$)", "^\\./?$"],
              ["^(experiments)(/.*|$)"],
              ["^.+\\.s?css$"],
            ],
          },
        ],
        "simple-import-sort/exports": WARNING,
        "unused-imports/no-unused-imports": ERROR,
        "unused-imports/no-unused-vars": [
          ERROR,
          {
            vars: "all",
            varsIgnorePattern: "^_",
            args: "after-used",
            argsIgnorePattern: "^_",
          },
        ],
        "import/no-extraneous-dependencies": WARNING,
        "no-param-reassign": OFF,
        "consistent-return": OFF,
        "no-use-before-define": OFF,
        "no-shadow": OFF,
        "@typescript-eslint/no-shadow": OFF,
        "react/jsx-no-constructed-context-values": OFF,
        "react/function-component-definition": OFF,
        "react/destructuring-assignment": OFF,
        "react/jsx-props-no-spreading": OFF,
        "react/no-unstable-nested-components": OFF,
        "@typescript-eslint/comma-dangle": OFF,
        "@typescript-eslint/naming-convention": OFF,
        "class-methods-use-this": OFF,
        // Kilo node.js eslint config
        "arrow-body-style": [ERROR, "as-needed"],
        "arrow-parens": [WARNING, "as-needed"],
        "block-spacing": ERROR,
        "brace-style": ERROR,
        "comma-dangle": [ERROR, "always-multiline"],
        "comma-spacing": ERROR,
        "computed-property-spacing": ERROR,
        curly: [ERROR, "multi-line"],
        "default-case": [WARNING, { commentPattern: "^no default$" }],
        "eol-last": ERROR,
        "func-style": [ERROR, "declaration", { allowArrowFunctions: true }],
        "import/export": ERROR,
        "import/extensions": OFF,
        "import/first": ERROR,
        "import/newline-after-import": ERROR,
        "import/no-default-export": OFF,
        "import/no-duplicates": ERROR,
        "import/no-dynamic-require": OFF,
        "import/no-named-as-default-member": OFF,
        "import/no-relative-parent-imports": OFF,
        "import/no-self-import": ERROR,
        "import/no-useless-path-segments": ERROR,
        "import/prefer-default-export": OFF,
        "jsx-quotes": [ERROR, "prefer-double"],
        "key-spacing": ERROR,
        "max-classes-per-file": [ERROR, WARNING],
        "no-case-declarations": OFF,
        "no-debugger": WARNING,
        "no-empty-pattern": ERROR,
        "no-empty": OFF,
        "no-eval": ERROR,
        "no-extend-native": ERROR,
        "no-extra-label": ERROR,
        "no-floating-decimal": ERROR,
        "no-global-assign": [ERROR, { exceptions: [] }],
        "no-implied-eval": ERROR,
        "no-invalid-this": OFF,
        "no-labels": [ERROR, { allowLoop: false, allowSwitch: false }],
        "no-loop-func": ERROR,
        "no-lone-blocks": ERROR,
        "no-multi-spaces": [
          ERROR,
          {
            ignoreEOLComments: false,
          },
        ],
        "no-nested-ternary": WARNING,
        "no-new-func": ERROR,
        "no-new-wrappers": ERROR,
        "no-new": ERROR,
        "no-redeclare": ERROR,
        "no-restricted-globals": [ERROR].concat(restrictedGlobals),
        "no-restricted-properties": [
          ERROR,
          {
            object: "global",
            property: "isFinite",
            message: "Please use Number.isFinite instead",
          },
          {
            object: "self",
            property: "isFinite",
            message: "Please use Number.isFinite instead",
          },
          {
            object: "window",
            property: "isFinite",
            message: "Please use Number.isFinite instead",
          },
          {
            object: "global",
            property: "isNaN",
            message: "Please use Number.isNaN instead",
          },
          {
            object: "self",
            property: "isNaN",
            message: "Please use Number.isNaN instead",
          },
          {
            object: "window",
            property: "isNaN",
            message: "Please use Number.isNaN instead",
          },
          {
            property: "__defineGetter__",
            message: "Please use Object.defineProperty instead.",
          },
          {
            property: "__defineSetter__",
            message: "Please use Object.defineProperty instead.",
          },
          {
            object: "Math",
            property: "pow",
            message: "Use the exponentiation operator (**) instead.",
          },
        ],
        "no-restricted-syntax": [ERROR, "WithStatement"],
        "no-return-await": WARNING,
        "no-self-assign": [
          WARNING,
          {
            props: true,
          },
        ],
        "no-self-compare": "error",
        "no-sequences": "error",
        "no-throw-literal": "error",
        "no-trailing-spaces": WARNING,
        "no-underscore-dangle": ERROR,
        "no-useless-concat": "error",
        "no-useless-escape": WARNING,
        "no-var": ERROR,
        "no-with": "error",
        "object-curly-spacing": [ERROR, "always"],
        "padded-blocks": [ERROR, "never"],
        "padding-line-between-statements": [
          ERROR,
          { blankLine: "always", prev: "*", next: "return" },
          { blankLine: "always", prev: "*", next: "block" },
          { blankLine: "always", prev: "block", next: "*" },
          { blankLine: "always", prev: "*", next: "block-like" },
          { blankLine: "always", prev: "block-like", next: "*" },
        ],
        "prefer-object-spread": WARNING,
        "prefer-promise-reject-errors": ["error", { allowEmptyReject: true }],
        quotes: [
          "error",
          "single",
          { allowTemplateLiterals: true, avoidEscape: true },
        ],
        "require-await": OFF,
        "require-unicode-regexp": OFF,
        "space-before-function-paren": [
          ERROR,
          {
            anonymous: "always",
            named: "never",
            asyncArrow: "always",
          },
        ],
        "@typescript-eslint/ban-types": OFF,
        "@typescript-eslint/explicit-function-return-type": OFF,
        "@typescript-eslint/explicit-module-boundary-types": OFF,
        "@typescript-eslint/no-explicit-any": WARNING,
        "@typescript-eslint/no-non-null-assertion": ERROR,
        "@typescript-eslint/no-unused-vars": [ERROR, NO_UNUSED_VARS_OPTIONS],
        "@typescript-eslint/no-use-before-define": OFF,
        "@typescript-eslint/prefer-optional-chain": ERROR,
        "no-dupe-class-members": OFF,
        "no-unused-vars": [ERROR, NO_UNUSED_VARS_OPTIONS],
        // Kilo react eslint config
        "react-hooks/exhaustive-deps": OFF,
        "react-hooks/rules-of-hooks": ERROR,
        "react/default-props-match-prop-types": WARNING,
        "react/display-name": [WARNING, { ignoreTranspilerName: false }],
        "react/jsx-closing-bracket-location": [ERROR, "tag-aligned"],
        "react/jsx-closing-tag-location": ERROR,
        "react/jsx-curly-spacing": WARNING,
        "react/jsx-equals-spacing": [WARNING, "never"],
        "react/jsx-first-prop-new-line": [WARNING, "multiline-multiprop"],
        "react/jsx-indent-props": OFF,
        "react/jsx-key": WARNING,
        "react/jsx-max-props-per-line": OFF,
        "react/jsx-no-bind": OFF,
        "react/jsx-no-comment-textnodes": WARNING,
        "react/jsx-no-duplicate-props": WARNING,
        "react/jsx-no-literals": OFF,
        "react/jsx-no-undef": WARNING,
        "react/jsx-pascal-case": WARNING,
        "react/jsx-props-no-multi-spaces": WARNING,
        "react/jsx-sort-default-props": [
          OFF,
          {
            ignoreCase: true,
          },
        ],
        "react/jsx-sort-props": OFF,
        "react/jsx-space-before-closing": [OFF, "always"],
        "react/jsx-tag-spacing": [
          ERROR,
          {
            closingSlash: "never",
            beforeSelfClosing: "always",
            afterOpening: "never",
            beforeClosing: "never",
          },
        ],
        "react/jsx-uses-react": WARNING,
        "react/jsx-uses-vars": WARNING,
        "react/no-children-prop": OFF,
        "react/no-danger": WARNING,
        "react/no-deprecated": [WARNING],
        "react/no-did-mount-set-state": WARNING,
        "react/no-direct-mutation-state": ERROR,
        "react/no-is-mounted": ERROR,
        "react/no-multi-comp": [WARNING, { ignoreStateless: true }],
        "react/no-render-return-value": ERROR,
        "react/no-set-state": OFF,
        "react/no-string-refs": ERROR,
        "react/no-this-in-sfc": ERROR,
        "react/no-typos": WARNING,
        "react/no-unescaped-entities": WARNING,
        "react/no-unknown-property": WARNING,
        "react/no-unused-prop-types": OFF,
        "react/no-unused-state": WARNING,
        "react/no-will-update-set-state": WARNING,
        "react/prefer-es6-class": WARNING,
        "react/prefer-stateless-function": [
          WARNING,
          { ignorePureComponents: true },
        ],
        "react/prop-types": OFF,
        "react/react-in-jsx-scope": OFF,
        "react/require-default-props": OFF,
        "react/require-render-return": ERROR,
        "react/self-closing-comp": WARNING,
        "react/sort-comp": [
          WARNING,
          {
            order: [
              "propTypes",
              "defaultProps",
              "static-variables",
              "state",
              "/^.+Ref|Refs$/",
              "/^animated.+$/",
              "/^interval|tabButtons|animationDuration$/",
              "lifecycle",
              "everything-else",
              "/^render.+$/",
              "render",
            ],
          },
        ],
        "react/sort-prop-types": [
          OFF,
          {
            callbacksLast: false,
            ignoreCase: true,
            requiredFirst: false,
            sortShapeProp: true,
            noSortAlphabetically: false,
          },
        ],
        // Ecom added rules
        "no-unsafe-optional-chaining": ERROR,
        "react/no-array-index-key": OFF,
        "react/jsx-boolean-value": OFF,
        "@typescript-eslint/consistent-type-imports": ERROR,
        "jsx-a11y/no-static-element-interactions": OFF,
        "jsx-a11y/click-events-have-key-events": OFF,
        "jsx-a11y/no-noninteractive-element-interactions": OFF,
        "jsx-a11y/label-has-associated-control": OFF,
        "no-useless-computed-key": OFF,
        "react/jsx-no-useless-fragment": OFF,
        "import/no-named-as-default": OFF,
        radix: OFF,
        "guard-for-in": OFF,
        "import/no-mutable-exports": OFF,
        "no-restricted-exports": OFF,
        "react/button-has-type": OFF,
      },
    },
  ],
};
